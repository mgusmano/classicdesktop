Ext.define('{appName}.viewport.main.MainViewController', {
	extend: '{appName}.BaseViewController',
  alias: 'controller.mainview',
	requires: [
		'Ext.Package'
	],

	init: function() {
		this.user = JSON.parse(sessionStorage.getItem("user"))
		//console.log('init',this.user,this.user.firstname,this.user.lastname)
		var vm = this.getViewModel(); 
		vm.set('firstname', this.user.firstname);
		vm.set('lastname', this.user.lastname);
		this.callParent(arguments)
	},

	routes: { 
		':xtype': {
			before: 'loadPackage',
			action: 'mainRoute'
		}
	},

	node: null,

	loadPackage: function (xtype,action) {
		console.log('loadPackage')
		this.node = Ext.refs.menuview.controller.getNode(xtype)
		if (this.node == null) {
			console.log('unmatchedRoute: ' + xtype);
			return;
		}
		var pkg = this.node.get('package')
		if (pkg === undefined || pkg === null) {
			//console.log('no package to load')
			action.resume();
		}
		else if (Ext.Package.isLoaded(pkg)) {
			//console.log(pkg + ' is already loaded')
			action.resume();
		}
		else {
			var myMask = new Ext.LoadMask({
					msg: 'Loading ' + xtype + '...',
					target : Ext.viewport //Ext.refs.centerview
			});
			myMask.show();
			Ext.defer(function () {  // so we can see the loading mask...
				Ext.Package.load(pkg).then(function () {
						myMask.hide();
						action.resume();
				});
			}, 500);
		}
	},

	mainRoute: function(xtype) {
		var menuview = Ext.refs.menuview;
		var centerview = Ext.refs.centerview;
		var exists = Ext.ClassManager.getByAlias('widget.' + xtype);
		if (exists === undefined) {
			centerview.add({ xtype: 'panel', html: '<div style="font-size:24px;margin:20px;">' + xtype + ' does not exist<div>' });
			return;
		}
		if (!centerview.getComponent(xtype)) {
			var i = centerview.add({ xtype: xtype, reference: xtype, itemId: xtype, heading: this.node.get('text') });
			Ext.refs[xtype] = i
		}
		centerview.setActiveItem(xtype);
		menuview.setSelection(this.node);
		var vm = this.getViewModel(); 
		vm.set('heading', this.node.get('text'));
	}

});